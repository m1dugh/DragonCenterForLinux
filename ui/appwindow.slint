import { CheckBox, Button, TabWidget, ComboBox, Switch } from "std-widgets.slint";

component BatterySelector {
    in-out property <string> battery-mode: "min";

    callback request-update(string);
    
     HorizontalLayout {
         Button {
              text: "min";
              clicked => {
                  root.battery-mode = "min";
                 request-update(root.battery-mode);
              }
         }
         min-check := CheckBox {
            enabled: false;
            checked: battery-mode == "min";
         }
         Button {
             text: "mid";
             clicked => {
                 root.battery-mode = "medium";
                 request-update(root.battery-mode);
             }
         }
         medium-check := CheckBox {
            enabled: false;
            checked: battery-mode == "medium";
         }
         Button {
             text: "max";
             clicked => {
                 root.battery-mode = "max";
                 request-update(root.battery-mode);
             }
         }
         max-check := CheckBox {
            enabled: false;
            checked: battery-mode == "max";
         }
     }

    states [
        min when self.battery-mode == "min": {
            min-check.checked: true;
            medium-check.checked: false;
            max-check.checked: false;
        }
        medium when self.battery-mode == "medium": {
            min-check.checked: false;
            medium-check.checked: true;
            max-check.checked: false;
        }
        max when self.battery-mode == "max": {
            min-check.checked: false;
            medium-check.checked: false;
            max-check.checked: true;
        }
    ]
}

export component AppWindow inherits Window {
    callback request-battery-update <=> battery-tab.request-update;
    in-out property <string> battery-mode <=> battery-tab.battery-mode;

    callback request-shift-update <=> shift-tab.selected;
    in property <string> shift-current-value <=> shift-tab.current-value;
    in property <[string]> shift-model <=> shift-tab.model;

    callback request-fan-update <=> fan-tab.selected;
    in property <string> fan-current-value <=> fan-tab.current-value;
    in property <[string]> fan-model <=> fan-tab.model;

    callback request-cooler-boost-update <=> cooler-boost.toggled; 

    in-out property cooler-boost-value <=> cooler-boost.checked;

    TabWidget {
        Tab {
            title: "battery";
            battery-tab := BatterySelector {
            }
        }
        Tab {
            title: "shift";
            HorizontalLayout {
                Rectangle {
                    shift-tab := ComboBox {
                    }
                }
                Rectangle {
                    fan-tab := ComboBox {
                    }
                }
                Rectangle {
                    cooler-boost := Switch {
                        text: "cooler boost";
                    }
                }
            }
        }
    }
}
